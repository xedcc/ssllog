HOW TO CREATE AN ORACLE EBS SNAPSHOT.

Launch a new instance Ubuntu Server 12.04.2 LTS 64 bit AMI ID ami-d0f89fb9.
Wait for the instance to initialize and "Status Checks" showing "2/2 checks passed".
Stop the instance, wait for the state to become "Stopped", and detach the volume.
Wait for the volume state to become "available" and attach the volume to any running instance.

From within the running instance "sudo mount" the volume and perform file system changes to the mounted volume:
(The folowing needs to be deleted as files in those locations will always vary between instances of the same AMI.)

delete and recreate /dev with permissions 755 root:root
rm /etc/hostname 
rm -r /var/log
rm -r /var/lib/cloud
rm -r /var/lib/dhcp
rm -r /var/lib/plymouth
rm -r /var/lib/urandom
rm /etc/ssh/ssh_host_*
rm /home/ubuntu/.ssh/authorized_keys
rm /home/root/.ssh/authorized_keys

Copy the following files from git's oracle directory making sure the permissions and ownership matches:
 
rc.local        to /etc/rc.local 	 perm 755	root:root
ssh.conf        to /etc/init/ssh.conf  	 perm 644 	root:root
sshd_config     to /etc/ssh/sshd_config	 perm 644	root:root
authorized_keys to /home/ubuntu/.ssh/authorized_keys perm 600 	ubuntu:ubuntu
oracle.py       to /home/ubuntu		 perm 600	ubuntu:ubuntu
stub.py         to /home/ubuntu		 perm 600	ubuntu:ubuntu	
stcppipe.zip    to /home/ubuntu		 perm 600	ubuntu:ubuntu

Unmount the volume eg "umount /dev/xvdf"
Detach the volume from the instance in the aws console.
Create a snapshot from the volume, make the snapshot public and not the snapshot it.




HOW TO CREATE AN ORACLE INSTANCE FROM THE ORACLE EBS SNAPSHOT.

Install ec2-api-tools on your local machine. You need to add a new repository. Please search online.

ec2-run-instances ami-d0f89fb9 -t t1.micro -z us-east-1a -b /dev/sda1=none -b /dev/sda2=<snap-id>::false:standard -O <Access Key ID> -W <Secret Access Key>




HOW CAN A THIRD PARTY CHECK THAT THE SNAPSHOT CONTENTS WAS NOT MODIFIED.
Repeat all the steps described in "HOW TO CREATE AN ORACLE EBS SNAPSHOT". You will get a custom volume.

Create a volume from the ORACLE EBS SNAPSHOT which the escrow made public.
Attach the volume to a running instance and mount it.
 

Now compare hashes from the hashes of the custom volume to the hashes of the volume from oracle-snapshot. First hash file/directory/symlink paths, ownership, permissions, and symlink targets then hash the contents of all regular files.

cd into the root directory of the mounted volume , e.g. "cd /mnt/myvolume" and "sudo -s"

find . -printf '%h %f %U %G %m %l\n' | sha256sum
3ef4568f919b1defa995df57650e226fa2acfc3924bc4494943286cf42647952

find . -type f -print0 | sort -z | xargs -0 sha256sum | sha256sum
8914bc0302a8c1b087bba10ff973b0c5fe05381e4644500741beb712c9bd8a21




HOW TO PROVE TO THE WORLD THAT A CERTAIN IP ADDRESS IS RUNNING THE ORACLE INSTANCE.

Using aws_query.py create and make public GET strings for requests DescribeInstances, DescribeVolumes, and GetConsoleOutput.




